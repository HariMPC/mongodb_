USERS:
guvidb> db.users.insertMany([{userId:"1",name:"user1",email:'user1@gmail.com',batch:"48English",codekataSolv:"1,2,3,4"},
{userId:"2",name:"user2",email:"user2@gamil.com",batch:"48tamil",codekataSolve:"2,5,3"},
{userId:"3",name:"user3",email:"user3@gamil.com",batch:"48english",codekataSolv:"3,4,5"}]);
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("64d2f4f3ffa52a1f2613b652"),
    '1': ObjectId("64d2f4f3ffa52a1f2613b653"),
    '2': ObjectId("64d2f4f3ffa52a1f2613b654")
  }
}
guvidb> db.users.find();
[
  {
    _id: ObjectId("64d2f4f3ffa52a1f2613b652"),
    userId: '1',
    name: 'user1',
    email: 'user1@gmail.com',
    batch: '48English',
    codekataSolv: '1,2,3,4'
  },
  {
    _id: ObjectId("64d2f4f3ffa52a1f2613b653"),
    userId: '2',
    name: 'user2',
    email: 'user2@gamil.com',
    batch: '48tamil',
    codekataSolve: '2,5,3'
  },
  {
    _id: ObjectId("64d2f4f3ffa52a1f2613b654"),
    userId: '3',
    name: 'user3',
    email: 'user3@gamil.com',
    batch: '48english',
    codekataSolv: '3,4,5'
  }
]
CODEKATA:
guvidb> db.codekata.insertMany([{id:"1",catagory:"input/output",description:"write a code to get the input and print the output as mentioned in the given format"},
{id:"2",catagory:"Array",description:"Write a code with the array functions for the given 5 stings to convert into number"},
{id:"3",catagory:"absolute beginer",description:"write a code to get the string value without any array functions"}]);
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("64d2f842ffa52a1f2613b655"),
    '1': ObjectId("64d2f842ffa52a1f2613b656"),
    '2': ObjectId("64d2f842ffa52a1f2613b657")
  }
}
guvidb> db.codekata.find();
[
  {
    _id: ObjectId("64d2f842ffa52a1f2613b655"),
    id: '1',
    catagory: 'input/output',
    description: 'write a code to get the input and print the output as mentioned in the given format'
  },
  {
    _id: ObjectId("64d2f842ffa52a1f2613b656"),
    id: '2',
    catagory: 'Array',
    description: 'Write a code with the array functions for the given 5 stings to convert into number'
  },
  {
    _id: ObjectId("64d2f842ffa52a1f2613b657"),
    id: '3',
    catagory: 'absolute beginer',
    description: 'write a code to get the string value without any array functions'
  }
]
ATTENDANCE
db.attendance.insertMany([{"id":1,"date":new Date("2020-10-08"),"present":[1,2,3,4,5],"absent":[0]},
{"id":2,"date":new Date("2020-10-09"),"present":[2,3,4,5],"absent":[1]},
{"id":3,"date":new Date("2020-10-11"),"present":[1,3,4,5],"absent":[2]},]);
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("64d2f842ffa52a1f2613b658"),
    '1': ObjectId("64d2f842ffa52a1f2613b659"),
    '2': ObjectId("64d2f842ffa52a1f2613b660")
  }
}
db.attendance.find();
[
    {
        _id:ObjectId("64d2f842ffa52a1f2613b658"),
       id:"1",
       date:"new Date("2020-10-08")",
       present:"[1,2,3,4,5]",
       absent:"[0]"
    },
     {
        _id:ObjectId("64d2f842ffa52a1f2613b658"),
       id:"2",
       date:"new Date("2020-10-09")",
       present:"[1,2,3,5]",
       absent:"[4]"
    },
     {
        _id:ObjectId("64d2f842ffa52a1f2613b658"),
       id:"3",
       date:"new Date("2020-10-11")",
       present:"[1,2,5]",
       absent:"[3,4]"
    }
]
TOPICS:
db.topics.insertMany([{"topic_id":1,"name":"HTML","description":"HTML","date":new Date("2020-10-15")},
{"topic_id":2,"name":"CSS","description":"CSS","date":new Date("2020-10-16")},
{"topic_id":3,"name":"Javascript","description":"Javascript","date":new Date("2020-10-17")}]);
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("64d2f842ffa52a1f2613b661"),
    '1': ObjectId("64d2f842ffa52a1f2613b662"),
    '2': ObjectId("64d2f842ffa52a1f2613b663")
  }
}
db.topics.find();
[
    {
    _id: ObjectId("64d2f842ffa52a1f2613b661"),
    "topic_id":1,
    "name":"HTML",
    "description":"HTML",
    "date":new Date("2020-10-15")
    },
    {
     _id:  ObjectId("64d2f842ffa52a1f2613b662")
    "topic_id":2,
    "name":"CSS",
    "description":"CSS",
    "date":new Date("2020-10-16")},
    {
     _id:  ObjectId("64d2f842ffa52a1f2613b663")
    "topic_id":3,
    "name":"Javascript",
    "description":"Javascript",
    "date":new Date("2020-10-17")
    }
]

TASKS
db.tasks.insertMany([{"taskId":1,"name":"create-react-app","description":"create-react-app","date":new Date("2020-10-08"),"submitted":[1,3,4],"not_submitted":[2,5]},
{"taskId":2,"name":"MySQL tables","description":"create tables in MySQL","date":new Date("2020-10-09"),"submitted":[1,3,4],"not_submitted":[2,5]},
{"taskId":3,"name":"HTML forms","description":"create a form in HTML","date":new Date("2020-10-11"),"submitted":[1,3,4],"not_submitted":[2,5]}]);
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("64d2f842ffa52a1f2613b664"),
    '1': ObjectId("64d2f842ffa52a1f2613b665"),
    '2': ObjectId("64d2f842ffa52a1f2613b666")
  }
}
db.tasks.find();
[
{
     _id: ObjectId("64d2f842ffa52a1f2613b664"),
    "taskId":1,
    "name":"create-react-app",
    "description":"create-react-app",
    "date":new Date("2020-10-08"),
    "submitted":[1,3,4],
    "not_submitted":[2,5]
},
{
     _id: ObjectId("64d2f842ffa52a1f2613b665"),
    "taskId":2,
    "name":"MySQL tables",
    "description":"create tables in MySQL",
    "date":new Date("2020-10-09"),
    "submitted":[1,3,4],
    "not_submitted":[2,5]
},
{
     _id: ObjectId("64d2f842ffa52a1f2613b666"),
    "taskId":3,
    "name":"HTML forms",
    "description":"create a form in HTML",
    "date":new Date("2020-10-11"),
    "submitted":[1,3,4],
    "not_submitted":[2,5]
}
]
COMPANY_DRIVES:
db.company_drives.insertMany([{"company_name":"company1","interview_date":new Date("2020-10-10"),"student_id_list":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]},
{"company_name":"company2","interview_date":new Date("2020-10-14"),"student_id_list":[17,18,19,20]},
{"company_name":"company3","interview_date":new Date("2020-10-17"),"student_id_list":[21,22,23,24]},
]);
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("64d2f842ffa52a1f2613b667"),
    '1': ObjectId("64d2f842ffa52a1f2613b668"),
    '2': ObjectId("64d2f842ffa52a1f2613b669")
  }
}
db.company_drives.find();
[
    {
        _id: ObjectId("64d2f842ffa52a1f2613b667"),
        "company_name":"company1",
        "interview_date":new Date("2020-10-10"),
        "student_id_list":[1,2,3,4,5,6,7,8,9,10,11,12]
    },
   {
         _id: ObjectId("64d2f842ffa52a1f2613b668"),
        "company_name":"company2",
        "interview_date":new Date("2020-10-14"),
        "student_id_list":[17,18,19,20]
    },
    {
         _id: ObjectId("64d2f842ffa52a1f2613b669"),
        "company_name":"company3",
        "interview_date":new Date("2020-10-17"),
        "student_id_list":[21,22,23,24]
    }

]

MENTORS:
db.mentors.insertMany([{"mentor_id":1,"name":"mentor1","email":"mentor1@gmail.com","student_id_list":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]},
{"mentor_id":2,"name":"mentor2","email":"mentor2@gmail.com","student_id_list":[17,18,19,20]},
{"mentor_id":3,"name":"mentor3","email":"mentor3@gmail.com","student_id_list":[21,22,23,24]}]);
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("64d2f842ffa52a1f2613b670"),
    '1': ObjectId("64d2f842ffa52a1f2613b671"),
    '2': ObjectId("64d2f842ffa52a1f2613b672")
  }
}
db.mentors.find();
[
    {
         _id: ObjectId("64d2f842ffa52a1f2613b670"),
        "mentor_id":1,
        "name":"mentor1",
        "email":"mentor1@gmail.com",
        "student_id_list":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]
    },
    {
         _id: ObjectId("64d2f842ffa52a1f2613b671"),
        "mentor_id":2,
        "name":"mentor2",
        "email":"mentor2@gmail.com",
        "student_id_list":[17,18,19,20]
    },
    {
         _id: ObjectId("64d2f842ffa52a1f2613b672"),
        "mentor_id":3,
        "name":"mentor3",
        "email":"mentor3@gmail.com",
        "student_id_list":[21,22,23,24]}
]


1.Find all the topics and tasks which are thought in the month of October
 
db.tasks.find({"date":{$gte:ISODate("2020-10-01"),$lt:ISODate("2020-10-31")}});

topics : db.topics.find({"date":{$gte:ISODate("2020-10-01"),$lt:ISODate("2020-10-31")}});

2.Find all the company drives which appeared between 15 oct-2020 and 31-oct-2020

db.company_drive.find({"interview_date":{$gte:ISODate("2020-10-15"),$lt:ISODate("2020-10-31")}});

3.Find all the company drives and students who are appeared for the placement.

db.company_drive.find({},{company_name:1,student_id_list:1,_id:0});

4.Find the number of problems solved by the user in codekata

db.users.aggregate([{$project:{codekata_solved:1,userId:1,_id:0}}]);

5.Find all the mentors with who has the mentee's count more than 15

db.mentors.find({$where:"this.student_id_list.length > 15"},{mentor_id:1,_id:0});

6.Find the number of users who are absent and task is not submitted  between 15 oct-2020 and 31-oct-2020

db.attendance.aggregate([{$match:{"date":{$gte:ISODate("2020-10-15"),$lt:ISODate("2020-10-31")}}},{$project:{_id:0,date:1,id:1,no_of_absent: {$size: "$absent"}}}])

db.tasks.aggregate([{$match:{"date":{$gte:ISODate("2020-10-15"),$lt:ISODate("2020-10-31")}}},{$project:{task_not_submitted:{$size:"$not_submitted"}}}])
